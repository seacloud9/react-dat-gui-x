{"version":3,"file":"index.cjs.js","sources":["../src/components/DatString.js","../src/components/utils.js","../src/components/Slider.js","../src/components/DatNumber.js","../src/components/DatBoolean.js","../src/components/DatButton.js","../src/components/DatFolder.js","../src/components/DatSelect.js","../src/components/Picker/Fields.js","../src/components/Picker/Pointer.js","../src/components/Picker/PointerCircle.js","../src/components/Picker/index.js","../src/components/DatColor.js","../src/components/DatPresets.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatString extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func,\n    _onUpdateValue: PropTypes.func.isRequired,\n    onChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    onUpdate: () => null,\n    onChange: () => null\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      value: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    if (prevState.value === nextValue) return null;\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    const { liveUpdate, path, onChange } = this.props;\n\n    if (liveUpdate) this.update(value);\n\n    onChange(path, value);\n  };\n\n  handleFocus = () => {\n    document.addEventListener('keydown', this.handleKeyDown);\n  };\n\n  handleBlur = () => {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    window.getSelection().removeAllRanges();\n\n    const { liveUpdate } = this.props;\n    if (!liveUpdate) this.update();\n  };\n\n  handleKeyDown = event => {\n    const key = event.keyCode || event.which;\n    const { liveUpdate } = this.props;\n\n    if (key === 13 && !liveUpdate) this.update();\n  };\n\n  update(value) {\n    const { _onUpdateValue, onUpdate, path } = this.props;\n    _onUpdateValue(path, value);\n    onUpdate(value);\n  }\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'string', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <input\n            style={{ width: `calc(100% - ${labelWidth})` }}\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n          />\n        </label>\n      </li>\n    );\n  }\n}\n","/* eslint-disable no-restricted-globals */\nexport function toNumber(value) {\n  const float = parseFloat(value);\n  return isNaN(float) ? 0 : float;\n}\n\n/**\n * Polyfill for isInteger.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\n * @param {number} value\n * @return {bool}\n */\nexport const isInteger =\n  Number.isInteger ||\n  // eslint-disable-next-line func-names\n  function(value) {\n    return (\n      typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value\n    );\n  };\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clamp from 'lodash.clamp';\nimport cx from 'classnames';\nimport { toNumber } from './utils';\n\nexport default class Slider extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    width: PropTypes.number,\n    onUpdate: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    value: null,\n    min: null,\n    max: null,\n    width: null\n  };\n\n  constructor() {\n    super();\n    this.state = { value: null };\n    this.sliderRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = toNumber(nextProps.value);\n\n    if (prevState.value === nextValue) return null;\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleMouseDown = event => {\n    this.update(event.pageX);\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('mouseup', this.handleMouseUp);\n  };\n\n  handleMouseMove = event => {\n    this.update(event.pageX);\n\n    event.preventDefault();\n  };\n\n  handleMouseUp = event => {\n    this.update(event.pageX, false);\n\n    window.removeEventListener('mousemove', this.handleMouseMove);\n    window.removeEventListener('mouseup', this.handleMouseUp);\n  };\n\n  handleClick = event => {\n    // do not focus input field on slider click\n    event.preventDefault();\n  };\n\n  update(pageX, isLive = true) {\n    const { min, max, onUpdate } = this.props;\n    const rect = this.sliderRef.current.getBoundingClientRect();\n    const x = pageX - rect.left;\n    const w = rect.right - rect.left;\n    const value = min + clamp(x / w, 0, 1) * (max - min);\n\n    this.setState({ value }, () => {\n      onUpdate(value, isLive);\n    });\n  }\n\n  render() {\n    const { min, max, width, className, style } = this.props;\n    const { value } = this.state;\n    const widthBackground = clamp(((value - min) * 100) / (max - min), 0, 100);\n    const sliderStyles = {\n      width: `${width}%`,\n      backgroundSize: `${widthBackground}% 100%`,\n      ...style\n    };\n\n    return (\n      <span\n        ref={this.sliderRef}\n        className={cx('slider', className)}\n        style={sliderStyles}\n        onClick={this.handleClick}\n        onMouseDown={this.handleMouseDown}\n        role=\"slider\"\n        tabIndex={0}\n        aria-valuenow={value}\n        aria-valuemin={min}\n        aria-valuemax={max}\n      />\n    );\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isFinite from 'lodash.isfinite';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\nimport Slider from './Slider';\nimport { isInteger, toNumber } from './utils';\n\nconst applyConstraints = ({ value, min, max, step }) => {\n  const [hasMin, hasMax, hasStep] = [\n    isFinite(min),\n    isFinite(max),\n    isFinite(step)\n  ];\n  const decimalPlaces =\n    hasStep && !isInteger(step) ? step.toString().split('.')[1].length : 0;\n  let [isMin, isMax] = [false, false];\n\n  value = toNumber(value);\n\n  if (hasMin && value <= min) {\n    value = min;\n    isMin = true;\n  }\n\n  if (hasMax && value >= max) {\n    value = max;\n    isMax = true;\n  }\n\n  if (!isMin && !isMax) {\n    if (hasStep && step !== 0) {\n      value = Math.round(value / step) * step;\n    }\n  }\n\n  return value.toFixed(decimalPlaces);\n};\n\nexport default class DatNumber extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired,\n    disableSlider: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    min: null,\n    max: null,\n    step: null,\n    path: null,\n    label: null,\n    disableSlider: null,\n    onChange: () => null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { value: null };\n  }\n\n  componentDidUpdate(previoiusProps) {\n    const { min, max, stepN } = previoiusProps;\n    const { step } = this.props;\n    if(stepN !== step){\n      const nextValue = applyConstraints({\n        value: result(step, previoiusProps.path),\n        min,\n        max,\n        step\n      });\n      this.setState({value: step})\n    }\n   \n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.update(value);\n  };\n\n  handleSliderUpdate = value => {\n    const { min, max, step } = this.props;\n\n    this.update(applyConstraints({ value, min, max, step }));\n  };\n\n  update = value => {\n    const { _onUpdateValue, path, onChange } = this.props;\n    \n    _onUpdateValue(path, toNumber(value));\n    onChange(path, value);\n  };\n\n  renderSlider(width) {\n    const { min, max } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Slider\n        value={value}\n        min={min}\n        max={max}\n        width={width}\n        onUpdate={this.handleSliderUpdate}\n      />\n    );\n  }\n\n  render() {\n    const {\n      min,\n      max,\n      path,\n      label,\n      labelWidth,\n      step,\n      disableSlider,\n      className,\n      style\n    } = this.props;\n    const labelText = isString(label) ? label : path;\n    const hasSlider = isFinite(min) && isFinite(max);\n    const controlsWidth = 100;\n    const inputWidth =\n      hasSlider && disableSlider !== true\n        ? Math.round(controlsWidth / 3)\n        : controlsWidth;\n    const sliderWidth = controlsWidth - inputWidth;\n\n    return (\n      <li className={cx('cr', 'number', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <span\n            style={{ display: 'inherit', width: `calc(100% - ${labelWidth})` }}\n          >\n            {hasSlider && disableSlider !== true\n              ? this.renderSlider(sliderWidth)\n              : null}\n            <input\n              type=\"number\"\n              step={step}\n              min={min}\n              max={max}\n              inputMode=\"numeric\"\n              value={this.state.value}\n              style={{ width: `${inputWidth}%` }}\n              onChange={this.handleChange}\n            />\n          </span>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatBoolean extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    checked: PropTypes.bool,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    checked:null,\n    onChange: () => null\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n\n  handleChange = event => {\n    const value = event.target.checked;\n    const { _onUpdateValue, path, onChange } = this.props;\n\n    _onUpdateValue(path, value, event);\n    onChange(path, value, event);\n  };\n\n  render() {\n    const { path, label, labelWidth, className, style, checked } = this.props;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'boolean', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <span\n            className=\"checkbox-container\"\n            style={{ width: `calc(100% - ${labelWidth})` }}\n          >\n            <input\n              type=\"checkbox\"\n              checked={checked}\n              onChange={this.handleChange}\n            />\n          </span>\n        </label>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst DatButton = ({ label, onClick, className, style }) => (\n  <li className={cx('cr', 'button', className)} style={style}>\n    <span\n      className=\"label-text\"\n      onClick={onClick}\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      {label}\n    </span>\n  </li>\n);\n\nDatButton.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  label: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\n\nDatButton.defaultProps = {\n  className: null,\n  style: null,\n  label: null\n};\n\nexport default DatButton;\n","import React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport default class DatFolder extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    title: PropTypes.string,\n    closed: PropTypes.bool,\n    children: PropTypes.element.isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    title: 'Folder',\n    closed: true,\n    onChange: () => null\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { closed: props.closed };\n  }\n\n  handleClick = () =>\n    this.setState(prevState => ({ closed: !prevState.closed }));\n\n\n  render() {\n    const { closed } = this.state;\n    const { title, className, style } = this.props;\n\n    return (\n      <li className={cx('folder', { closed }, className)} style={style}>\n        <div className=\"dg\">\n          <div\n            className=\"title\"\n            onClick={this.handleClick}\n            onKeyPress={this.handleClick}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {title}\n          </div>\n          <ul>{this.props.children}</ul>\n        </div>\n      </li>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatSelect extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    optionLabels: PropTypes.array,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func,\n    _onUpdateValue: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    optionLabels: null,\n    onUpdate: () => null,\n    onChange: () => null\n  };\n\n\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n      options: null\n    };\n  }\n\n\n  static getDerivedStateFromProps(nextProps) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    return {\n      value: nextValue,\n      options: nextProps.options\n    };\n  }\n\n\n  handleChange = event => {\n    const {value} = event.target;\n    const {liveUpdate, _onUpdateValue, onUpdate, path, onChange} = this.props;\n    _onUpdateValue(path, value);\n    if (liveUpdate) onUpdate(value);\n\n    onChange(path, value);\n  };\n\n\n  render() {\n    const {\n      path,\n      label,\n      labelWidth,\n      optionLabels,\n      className,\n      style\n    } = this.props;\n    const {value, options} = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'select', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{width: labelWidth}}>\n            {labelText}\n          </span>\n          <select\n            value={value}\n            onChange={this.handleChange}\n            style={{width: `calc(100% - ${labelWidth})`}}\n          >\n            {\n              Array.isArray(options) ?\n              options.map((item, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <option key={index} value={item}>\n                {optionLabels ? optionLabels[index] : item}\n                </option>\n              ))\n\n              : Object.entries(options).map(([key, value]) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <option key={key} value={key}>\n                    {optionLabels ? optionLabels[key] : value}\n                  </option>\n                ))\n            }\n          </select>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditableInput } from 'react-color/lib/components/common';\nimport color from 'react-color/lib/helpers/color';\n\nexport default class Fields extends Component {\n  static propTypes = {\n    hex: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  handleChange = (value, e) => {\n    const { onChange } = this.props;\n\n    if (color.isValidHex(value))\n      onChange(\n        {\n          hex: value,\n          source: 'hex'\n        },\n        e\n      );\n  };\n\n  render() {\n    const { hex } = this.props;\n\n    return (\n      <div className=\"flexbox-fix fields-wrap\">\n        <div className=\"flexbox-fix fields\">\n          <div className=\"field\">\n            <EditableInput value={hex} onChange={this.handleChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Pointer = () => <div className=\"pointer\" />;\n\nexport default Pointer;\n","import React from 'react';\n\nconst PointerCircle = () => <div className=\"pointer-circle\" />;\n\nexport default PointerCircle;\n","import { ColorWrap, Hue, Saturation } from 'react-color/lib/components/common';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Fields from './Fields';\nimport Pointer from './Pointer';\nimport PointerCircle from './PointerCircle';\n\nconst Picker = ({ onChange, hsl, hsv, hex, className = '' }) => {\n  return (\n    <div className={`picker ${className}`}>\n      <div className=\"saturation-wrap\">\n        <Saturation\n          className=\"saturation\"\n          hsl={hsl}\n          hsv={hsv}\n          pointer={PointerCircle}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"body\">\n        <div className=\"controls\">\n          <div className=\"toggles\">\n            <div className=\"hue-wrap\">\n              <Hue\n                className=\"hue\"\n                hsl={hsl}\n                pointer={Pointer}\n                onChange={onChange}\n              />\n            </div>\n          </div>\n        </div>\n        <Fields hex={hex} onChange={onChange} />\n      </div>\n    </div>\n  );\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  hsl: PropTypes.string,\n  hsv: PropTypes.string,\n  hex: PropTypes.string,\n  className: PropTypes.string,\n  disableAlpha: PropTypes.bool\n};\n\nPicker.defaultProps = {\n  hsl: null,\n  hsv: null,\n  hex: null,\n  className: null,\n  disableAlpha: false\n};\n\nexport default ColorWrap(Picker);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\nimport ColorPicker from './Picker';\n\nexport default class DatColor extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired,\n    onChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    onChange: () => null\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      value: null,\n      displayColorPicker: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    return {\n      ...prevState,\n      value: nextValue\n    };\n  }\n\n  handleClickColorPicker = () =>\n    this.setState(prevState => ({\n      ...prevState,\n      displayColorPicker: !prevState.displayColorPicker\n    }));\n\n  handleCloseColorPicker = () =>\n    this.setState({\n      displayColorPicker: false\n    });\n\n  handleChangeColor = color => {\n    const value = isString(color) ? color : color.hex;\n    const { _onUpdateValue, path, onChange } = this.props;\n\n    _onUpdateValue(path, value);\n    onChange(path, value);\n  };\n\n  renderPicker() {\n    const { value, displayColorPicker } = this.state;\n\n    return !displayColorPicker ? null : (\n      <div className=\"popover\">\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <div\n          className=\"cover\"\n          onClick={this.handleCloseColorPicker}\n          onKeyPress={this.handleCloseColorPicker}\n          role=\"button\"\n          tabIndex={0}\n        />\n        <ColorPicker color={value} onChange={this.handleChangeColor} />\n      </div>\n    );\n  }\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const { value } = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li\n        className={cx('cr', 'color', className)}\n        style={{ borderLeftColor: `${value}`, ...style }}\n      >\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <div\n            style={{\n              backgroundColor: value,\n              width: `calc(100% - ${labelWidth})`\n            }}\n          >\n            <div\n              className=\"swatch\"\n              onClick={this.handleClickColorPicker}\n              onKeyPress={this.handleClickColorPicker}\n              role=\"button\"\n              tabIndex={0}\n            >\n              {value}\n            </div>\n            {this.renderPicker()}\n          </div>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isString from 'lodash.isstring';\nimport cx from 'classnames';\n\nconst DEFAULT_PRESET_KEY = 'Default';\n\nexport default class DatPresets extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      defaultPreset: null,\n      options: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = cloneDeep(nextProps.data);\n    const defaultPreset = prevState.defaultPreset\n      ? prevState.defaultPreset\n      : nextValue;\n\n    return {\n      defaultPreset,\n      options: [\n        { [DEFAULT_PRESET_KEY]: defaultPreset },\n        ...nextProps.options.filter(preset => {\n          return Object.keys(preset)[0] !== DEFAULT_PRESET_KEY;\n        })\n      ]\n    };\n  }\n\n  handleChange = event => {\n    const value = JSON.parse(event.target.value);\n    const { liveUpdate, onUpdate } = this.props;\n\n    if (liveUpdate) onUpdate(value);\n  };\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const { options } = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'presets', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <select\n            onChange={this.handleChange}\n            style={{ width: `calc(100% - ${labelWidth})` }}\n          >\n            {options.map(preset => {\n              return Object.keys(preset).map(key => {\n                return (\n                  <option key={key} value={JSON.stringify(preset[key])}>\n                    {key}\n                  </option>\n                );\n              });\n            })}\n          </select>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport cx from 'classnames';\nimport isUndefined from 'lodash.isundefined';\nimport set from 'lodash.set';\nimport './style/dat.scss';\n\nexport default class DatGui extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    liveUpdate: PropTypes.bool,\n    labelWidth: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    liveUpdate: true,\n    className: null,\n    style: null,\n    labelWidth: '40%'\n  };\n\n  handleUpdateValue = (path, value) => {\n    const { data, onUpdate } = this.props;\n    const dataUpdated = set(cloneDeep(data), path, value);\n\n    onUpdate(dataUpdated);\n  };\n\n  renderChildren() {\n    const { children, data } = this.props;\n\n    return React.Children.toArray(children)\n      .filter(child => child != null)\n      .map((child, i) => {\n      const liveUpdate = isUndefined(child.props.liveUpdate)\n        ? this.props.liveUpdate\n        : child.props.liveUpdate;\n      const labelWidth = isUndefined(child.props.labelWidth)\n        ? this.props.labelWidth\n        : child.props.labelWidth;\n\n      return cloneElement(child, {\n        key: i,\n        data,\n        liveUpdate,\n        labelWidth,\n        _onUpdateValue: this.handleUpdateValue\n      });\n    });\n  }\n\n  render() {\n    const { style, className } = this.props;\n    const classNames = cx('react-dat-gui', className);\n\n    return (\n      <div className={classNames} style={style}>\n        <ul className=\"dg main\">{this.renderChildren()}</ul>\n      </div>\n    );\n  }\n}\n\nexport { default as DatString } from './components/DatString';\nexport { default as DatNumber } from './components/DatNumber';\nexport { default as DatBoolean } from './components/DatBoolean';\nexport { default as DatButton } from './components/DatButton';\nexport { default as DatFolder } from './components/DatFolder';\nexport { default as DatSelect } from './components/DatSelect';\nexport { default as DatColor } from './components/DatColor';\nexport { default as DatPresets } from './components/DatPresets';\n"],"names":["DatString","_inherits","_createSuper","_classCallCheck","_defineProperty","_assertThisInitialized","event","value","target","props","liveUpdate","path","onChange","update","document","addEventListener","handleKeyDown","removeEventListener","window","getSelection","removeAllRanges","key","keyCode","which","state","_createClass","_onUpdateValue","onUpdate","label","labelWidth","className","style","labelText","isString","React","cx","width","handleChange","handleFocus","handleBlur","nextProps","prevState","nextValue","result","data","Component","toNumber","float","parseFloat","isNaN","isInteger","Number","isFinite","Math","floor","Slider","pageX","handleMouseMove","handleMouseUp","preventDefault","sliderRef","createRef","isLive","min","max","rect","current","getBoundingClientRect","x","left","w","right","clamp","setState","widthBackground","sliderStyles","_objectSpread","backgroundSize","handleClick","handleMouseDown","applyConstraints","step","hasMin","hasMax","hasStep","decimalPlaces","toString","split","length","isMin","isMax","round","toFixed","DatNumber","previoiusProps","stepN","handleSliderUpdate","disableSlider","hasSlider","controlsWidth","inputWidth","sliderWidth","display","renderSlider","DatBoolean","checked","DatButton","onClick","defaultProps","DatFolder","closed","title","children","DatSelect","options","optionLabels","Array","isArray","map","item","index","Object","entries","_slicedToArray","Fields","e","color","isValidHex","hex","source","EditableInput","Pointer","PointerCircle","Picker","hsl","hsv","Saturation","Hue","disableAlpha","ColorWrap","DatColor","displayColorPicker","handleCloseColorPicker","handleChangeColor","borderLeftColor","backgroundColor","handleClickColorPicker","renderPicker","DEFAULT_PRESET_KEY","DatPresets","JSON","parse","defaultPreset","preset","keys","stringify","cloneDeep","filter","DatGui","dataUpdated","set","Children","toArray","child","i","isUndefined","cloneElement","handleUpdateValue","classNames","renderChildren"],"mappings":"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"}